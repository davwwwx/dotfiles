function genkeyandcsr() {
  openssl req -out $2 -new -newkey rsa:2048 -nodes -keyout $1
}

function genkey() {
  openssl genrsa -out $1 $2
}

function gencsr() {
  openssl req -new -sha256 -key $1 -out $2
}

function gencrt() {
  openssl req -x509 -sha256 -nodes -days $3 -key $1 -out $2
}

function verifykey() {
  openssl rsa -in $1 -check
}

function verifycsr() {
  openssl req -noout -text -in $1
}

function verifycrt() {
 openssl x509 -text -noout -in $1
}

function md5key() {
 openssl rsa -noout -modulus -in $1 | openssl md5
}

function md5csr() {
 openssl req -noout -modulus -in $1 | openssl md5
}

function md5crt() {
 openssl x509 -noout -modulus -in $1 | openssl md5
}

function der2pem() {
 openssl x509 -inform der -in $1 -out $2
}

function pem2der() {
 openssl x509 -outform der -in $1 -out $2
}
function pkcs2pem() {
 openssl pkcs12 -in $1 -out $2 -nodes
}

function pem2pkcs() {
 openssl pkcs12 -export -out $4 -inkey $1 -in $2 -certfile $3
}


# Show all the names (CNs and SANs) listed in the SSL certificate
# for a given domain
function getcertnames() {
	if [ -z "${1}" ]; then
		echo "ERROR: No domain specified.";
		return 1;
	fi;

	local domain="${1}";
	echo "Testing ${domain}…";
	echo ""; # newline

	local tmp=$(echo -e "GET / HTTP/1.0\nEOT" \
		| openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1);

	if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
		local certText=$(echo "${tmp}" \
			| openssl x509 -text -certopt "no_aux, no_header, no_issuer, no_pubkey, \
			no_serial, no_sigdump, no_signame, no_validity, no_version");
		echo "Common Name:";
		echo ""; # newline
		echo "${certText}" | grep "Subject:" | sed -e "s/^.*CN=//" | sed -e "s/\/emailAddress=.*//";
		echo ""; # newline
		echo "Subject Alternative Name(s):";
		echo ""; # newline
		echo "${certText}" | grep -A 1 "Subject Alternative Name:" \
			| sed -e "2s/DNS://g" -e "s/ //g" | tr "," "\n" | tail -n +2;
		return 0;
	else
		echo "ERROR: Certificate not found.";
		return 1;
	fi;
}

function getcerts() {
	if [ -z "${1}" ]; then
		echo "ERROR: No domain specified.";
		return 1;
	fi;

	local domain="${1}";
	echo "Testing ${domain}…";
	echo ""; # newline

	local tmp=$(echo -e "GET / HTTP/1.0\nEOT" \
		| openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1);

	if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
		echo "${tmp}" \
			| openssl x509 -text -certopt "no_aux, no_header, no_issuer, no_pubkey, \
			no_serial, no_sigdump, no_signame, no_validity, no_version";
		return 0;
	else
		echo "ERROR: Certificate not found.";
		return 1;
	fi;
}
